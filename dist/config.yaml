project_name: healthchecker
release:
  github:
    owner: tufitko
    name: healthchecker
  name_template: '{{.Tag}}'
scoop:
  name: healthchecker
  commit_author:
    name: goreleaserbot
    email: goreleaser@carlosbecker.com
  commit_msg_template: Scoop update for {{ .ProjectName }} version {{ .Tag }}
builds:
- id: healthchecker
  goos:
  - linux
  goarch:
  - amd64
  - arm64
  goarm:
  - "6"
  gomips:
  - hardfloat
  targets:
  - linux_amd64
  - linux_arm64
  dir: .
  main: .
  ldflags:
  - -s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.Date}}
    -X main.builtBy=goreleaser
  binary: healthchecker
  builder: go
  gobinary: go
archives:
- id: default
  builds:
  - healthchecker
  name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm
    }}v{{ .Arm }}{{ end }}{{ if .Mips }}_{{ .Mips }}{{ end }}'
  format: tar.gz
  files:
  - src: license*
  - src: LICENSE*
  - src: readme*
  - src: README*
  - src: changelog*
  - src: CHANGELOG*
  allow_different_binary_count: false
snapshot:
  name_template: '{{ .Version }}-SNAPSHOT-{{ .ShortCommit }}'
checksum:
  name_template: '{{ .ProjectName }}_{{ .Version }}_checksums.txt'
  algorithm: sha256
dockers:
- ids:
  - healthchecker
  goos: linux
  goarch: amd64
  dockerfile: Dockerfile
  image_templates:
  - tufitko/healthchecker:v{{ .Version }}-amd64
  build_flag_templates:
  - --platform=linux/amd64
  use: buildx
- ids:
  - healthchecker
  goos: linux
  goarch: arm64
  dockerfile: Dockerfile
  image_templates:
  - tufitko/healthchecker:v{{ .Version }}-arm64
  build_flag_templates:
  - --platform=linux/arm64
  use: buildx
docker_manifests:
- name_template: tufitko/healthchecker:v{{ .Version }}
  image_templates:
  - tufitko/healthchecker:v{{ .Version }}-amd64
  - tufitko/healthchecker:v{{ .Version }}-arm64
  use: docker
dist: dist
env_files:
  github_token: ~/.config/goreleaser/github_token
  gitlab_token: ~/.config/goreleaser/gitlab_token
  gitea_token: ~/.config/goreleaser/gitea_token
source:
  name_template: '{{ .ProjectName }}-{{ .Version }}'
  format: tar.gz
gomod:
  gobinary: go
announce:
  twitter:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .GitURL
      }}/releases/tag/{{ .Tag }}'
  reddit:
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    url_template: '{{ .GitURL }}/releases/tag/{{ .Tag }}'
  slack:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .GitURL
      }}/releases/tag/{{ .Tag }}'
    username: GoReleaser
  discord:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .GitURL
      }}/releases/tag/{{ .Tag }}'
    author: GoReleaser
    color: "3888754"
    icon_url: https://goreleaser.com/static/avatar.png
  teams:
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .GitURL
      }}/releases/tag/{{ .Tag }}'
    color: '#2D313E'
    icon_url: https://goreleaser.com/static/avatar.png
  smtp:
    subject_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    body_template: 'You can view details from: {{ .GitURL }}/releases/tag/{{ .Tag
      }}'
  mattermost:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .GitURL
      }}/releases/tag/{{ .Tag }}'
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    username: GoReleaser
github_urls:
  download: https://github.com
gitlab_urls:
  download: https://gitlab.com
